{
  "name": "aws-payfac",
  "version": "1.0.0",
  "description": "<!-- title: 'AWS Simple HTTP Endpoint example in NodeJS' description: 'This template demonstrates how to make a simple HTTP API with Node.js running on AWS Lambda and API Gateway using the Serverless Framework.' layout: Doc framework: v4 platform: AWS language: nodeJS authorLink: 'https://github.com/serverless' authorName: 'Serverless, Inc.' authorAvatar: 'https://avatars1.githubusercontent.com/u/13742415?s=200&v=4' -->",
  "main": "handler.js",
  "type": "module",
  "scripts": {
    "typeorm": "tsx ./node_modules/typeorm/cli.js",
    "export-env": "cd functions && serverless export-env --stage dev --aws-profile payrix",
    "generate-env": "./scripts/generate-env.sh dev payrix",
    "migration:generate": "npm run typeorm -- migration:generate -d src/data-source/index.ts",
    "migration:run": "npm run typeorm -- migration:run -d src/data-source/index.ts",
    "migration:revert": "npm run typeorm -- migration:revert -d src/data-source/index.ts",
    "lint": "eslint . --ext .ts",
    "test": "echo \"Error: no test specified\" && exit 1",
    "deploy:infra": "cd infra && serverless deploy --stage dev --aws-profile payrix",
    "deploy:bastion": "cd bastion && serverless deploy --stage dev --aws-profile payrix",
    "deploy:functions": "cd functions && serverless deploy --stage dev --aws-profile payrix",
    "deploy:frontend": "cd frontend && serverless deploy --stage dev --aws-profile payrix",
    "deploy:all": "npm run deploy:infra && npm run deploy:bastion && npm run generate-env && npm run deploy:frontend && npm run deploy:functions",
    "function:create-merchant": "cd functions && serverless deploy function -f createMerchant --stage dev --aws-profile payrix",
    "function:list-merchants": "cd functions && serverless deploy function -f listMerchants --stage dev --aws-profile payrix",
    "token:dev:create": "npx tsx scripts/manage-tokens.ts create-token --stage dev --profile payrix",
    "token:test:create": "npx tsx scripts/manage-tokens.ts create-token --stage test --profile payrix",
    "token:prod:create": "npx tsx scripts/manage-tokens.ts create-token --stage prod --profile payrix",
    "token:dev:rotate": "npx tsx scripts/manage-tokens.ts rotate-token --stage dev --profile payrix",
    "token:test:rotate": "npx tsx scripts/manage-tokens.ts rotate-token --stage test --profile payrix",
    "token:prod:rotate": "npx tsx scripts/manage-tokens.ts rotate-token --stage prod --profile payrix",
    "remove:functions": "cd functions && serverless remove --stage dev --aws-profile payrix",
    "remove:bastion": "cd bastion && serverless remove --stage dev --aws-profile payrix",
    "remove:infra": "cd infra && serverless remove --stage dev --aws-profile payrix",
    "remove:frontend": "cd frontend && serverless remove --stage dev --aws-profile payrix",
    "remove:all": "npm run remove:functions && npm run remove:bastion && npm run remove:frontend && npm run remove:infra",
    "export-env:infra": "cd infra && serverless export-env --stage dev --aws-profile payrix",
    "export-env:functions": "cd functions && serverless export-env --stage dev --aws-profile payrix",
    "db:tunnel": "./scripts/db-tunnel.sh dev payrix aurora-bastion-key.pem 5432",
    "db:connect": "./scripts/db-connect.sh dev payrix connect",
    "db:start": "./scripts/db-connect.sh dev payrix start",
    "db:stop": "./scripts/db-connect.sh dev payrix stop",
    "db:status": "./scripts/db-connect.sh dev payrix status",
    "deploy": "npm run deploy:all",
    "remove": "npm run remove:all",
    "offline": "cd functions && serverless offline start --stage dev --aws-profile payrix"
  },
  "keywords": [],
  "author": "",
  "license": "ISC",
  "dependencies": {
    "@aws-sdk/client-ssm": "^3.536.0",
    "@types/aws-lambda": "^8.10.136",
    "@types/node": "^22.14.0",
    "aws-lambda": "^1.0.7",
    "aws-sdk": "^2.1692.0",
    "moment-timezone": "^0.5.48",
    "pg": "^8.14.1",
    "reflect-metadata": "^0.2.2",
    "serverless-export-env": "^2.2.0",
    "serverless-iam-roles-per-function": "^3.2.0",
    "serverless-offline": "^14.4.0",
    "ts-node": "^10.9.2",
    "tsx": "^4.19.3",
    "typeorm": "^0.3.22",
    "typescript": "^5.8.2",
    "uuid": "^8.3.2",
    "yargs": "^17.7.2"
  },
  "devDependencies": {
    "@types/yargs": "^17.0.32",
    "@typescript-eslint/eslint-plugin": "^8.29.0",
    "@typescript-eslint/parser": "^8.29.0",
    "eslint": "^9.23.0",
    "nodemon": "^3.1.9"
  }
}
