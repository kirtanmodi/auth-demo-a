import { MigrationInterface, QueryRunner } from "typeorm";

export class Init1743803105469 implements MigrationInterface {
    name = 'Init1743803105469'

    public async up(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query(`CREATE TABLE "merchant_bank_accounts" ("account_id" uuid NOT NULL DEFAULT uuid_generate_v4(), "merchant_id" uuid NOT NULL, "created_at" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(), "updated_at" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(), "is_primary" boolean NOT NULL DEFAULT false, "account_method" smallint NOT NULL, "account_number" character varying(255) NOT NULL, "routing_number" character varying(50) NOT NULL, "account_name" character varying(255), "currency" character varying(3) NOT NULL, "status" smallint NOT NULL DEFAULT '0', "verification_date" TIMESTAMP WITH TIME ZONE, CONSTRAINT "PK_65ec7738727a849bec8c58b43e8" PRIMARY KEY ("account_id"))`);
        await queryRunner.query(`CREATE TABLE "merchant_documents" ("document_id" uuid NOT NULL DEFAULT uuid_generate_v4(), "merchant_id" uuid NOT NULL, "member_id" uuid, "created_at" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(), "updated_at" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(), "document_type" smallint NOT NULL, "document_name" character varying(255) NOT NULL, "document_path" character varying(1024) NOT NULL, "mime_type" character varying(100) NOT NULL, "file_size" integer NOT NULL, "verification_status" smallint NOT NULL DEFAULT '0', "verification_date" TIMESTAMP WITH TIME ZONE, "verified_by" character varying(50), CONSTRAINT "PK_2c565f0381578c016d543a6eb0c" PRIMARY KEY ("document_id"))`);
        await queryRunner.query(`CREATE TABLE "merchant_members" ("member_id" uuid NOT NULL DEFAULT uuid_generate_v4(), "merchant_id" uuid NOT NULL, "created_at" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(), "updated_at" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(), "title" character varying(100), "first_name" character varying(100) NOT NULL, "last_name" character varying(100) NOT NULL, "ssn" character varying(20) NOT NULL, "date_of_birth" date NOT NULL, "ownership_percentage" smallint NOT NULL, "significant_responsibility" boolean NOT NULL DEFAULT false, "politically_exposed" boolean NOT NULL DEFAULT false, "email" character varying(255) NOT NULL, "phone" character varying(20) NOT NULL, "is_primary" boolean NOT NULL DEFAULT false, "address1" character varying(255) NOT NULL, "address2" character varying(255), "city" character varying(100) NOT NULL, "state" character varying(50) NOT NULL, "zip" character varying(20) NOT NULL, "country" character varying(50) NOT NULL, "id_verification_status" smallint NOT NULL DEFAULT '0', "background_check_status" smallint NOT NULL DEFAULT '0', CONSTRAINT "PK_1615df4b158b0abd82ede83b719" PRIMARY KEY ("member_id"))`);
        await queryRunner.query(`CREATE TABLE "merchant_onboarding_status" ("status_id" uuid NOT NULL DEFAULT uuid_generate_v4(), "merchant_id" uuid NOT NULL, "created_at" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(), "updated_at" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(), "current_step" smallint NOT NULL DEFAULT '1', "is_completed" boolean NOT NULL DEFAULT false, "completion_date" TIMESTAMP WITH TIME ZONE, "entity_info_completed" boolean NOT NULL DEFAULT false, "bank_info_completed" boolean NOT NULL DEFAULT false, "owner_info_completed" boolean NOT NULL DEFAULT false, "documents_uploaded" boolean NOT NULL DEFAULT false, "verification_completed" boolean NOT NULL DEFAULT false, "agreement_accepted" boolean NOT NULL DEFAULT false, "kyc_status" smallint NOT NULL DEFAULT '0', "aml_status" smallint NOT NULL DEFAULT '0', "underwriting_status" smallint NOT NULL DEFAULT '0', "is_automated_onboarding" boolean NOT NULL DEFAULT false, "notes" text, CONSTRAINT "REL_9acad834246f0d034ed266b4f2" UNIQUE ("merchant_id"), CONSTRAINT "PK_bc7511010014aa2affbc6ec7e10" PRIMARY KEY ("status_id"))`);
        await queryRunner.query(`CREATE TABLE "merchant_notes" ("note_id" uuid NOT NULL DEFAULT uuid_generate_v4(), "merchant_id" uuid NOT NULL, "created_at" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(), "created_by" character varying(255) NOT NULL, "note_text" text NOT NULL, "note_type" smallint NOT NULL DEFAULT '0', "is_internal" boolean NOT NULL DEFAULT true, CONSTRAINT "PK_463dd3c83e886e4c5fe00ec3c63" PRIMARY KEY ("note_id"))`);
        await queryRunner.query(`CREATE TABLE "merchant_audit_log" ("log_id" uuid NOT NULL DEFAULT uuid_generate_v4(), "merchant_id" uuid NOT NULL, "created_at" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(), "table_name" character varying(50) NOT NULL, "record_id" uuid NOT NULL, "action" character varying(10) NOT NULL, "changed_by" character varying(255) NOT NULL, "ip_address" character varying(50), "changes" jsonb NOT NULL, CONSTRAINT "PK_7112b61d1b7f1a02fd73a3383dc" PRIMARY KEY ("log_id"))`);
        await queryRunner.query(`CREATE TABLE "merchants" ("merchant_id" uuid NOT NULL DEFAULT uuid_generate_v4(), "created_at" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(), "updated_at" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(), "entity_type" smallint NOT NULL, "legal_name" character varying(255) NOT NULL, "address1" character varying(255) NOT NULL, "address2" character varying(255), "city" character varying(100) NOT NULL, "state" character varying(50) NOT NULL, "zip" character varying(20) NOT NULL, "country" character varying(50) NOT NULL, "phone" character varying(20) NOT NULL, "email" character varying(255) NOT NULL, "ein" character varying(20), "website" character varying(255), "tc_version" character varying(10) NOT NULL, "currency" character varying(3) NOT NULL, "dba_name" character varying(255), "is_new" boolean NOT NULL DEFAULT true, "mcc" character varying(4) NOT NULL, "status" smallint NOT NULL DEFAULT '0', "annual_cc_sales" numeric(15,2), "avg_ticket" numeric(10,2), "established_date" date, "verification_status" smallint NOT NULL DEFAULT '0', "risk_score" smallint, "approval_date" TIMESTAMP WITH TIME ZONE, "approved_by" character varying(50), CONSTRAINT "UQ_7682193bcf281285d0a459c4b1e" UNIQUE ("email"), CONSTRAINT "PK_829e43b4ae5e536cd560a83f0dc" PRIMARY KEY ("merchant_id"))`);
        await queryRunner.query(`ALTER TABLE "merchant_bank_accounts" ADD CONSTRAINT "FK_6547a5bab57714416db527ba19f" FOREIGN KEY ("merchant_id") REFERENCES "merchants"("merchant_id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "merchant_documents" ADD CONSTRAINT "FK_d09dd0ffd48b414fefd02409416" FOREIGN KEY ("merchant_id") REFERENCES "merchants"("merchant_id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "merchant_documents" ADD CONSTRAINT "FK_3f306d6e867fb947eaf2a9ae6ed" FOREIGN KEY ("member_id") REFERENCES "merchant_members"("member_id") ON DELETE SET NULL ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "merchant_members" ADD CONSTRAINT "FK_5f007086ad43497dd53f5892872" FOREIGN KEY ("merchant_id") REFERENCES "merchants"("merchant_id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "merchant_onboarding_status" ADD CONSTRAINT "FK_9acad834246f0d034ed266b4f2c" FOREIGN KEY ("merchant_id") REFERENCES "merchants"("merchant_id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "merchant_notes" ADD CONSTRAINT "FK_ffbeadff45290bac585410b963c" FOREIGN KEY ("merchant_id") REFERENCES "merchants"("merchant_id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "merchant_audit_log" ADD CONSTRAINT "FK_05a881fad7ebdc90fe4b8abe402" FOREIGN KEY ("merchant_id") REFERENCES "merchants"("merchant_id") ON DELETE CASCADE ON UPDATE NO ACTION`);
    }

    public async down(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query(`ALTER TABLE "merchant_audit_log" DROP CONSTRAINT "FK_05a881fad7ebdc90fe4b8abe402"`);
        await queryRunner.query(`ALTER TABLE "merchant_notes" DROP CONSTRAINT "FK_ffbeadff45290bac585410b963c"`);
        await queryRunner.query(`ALTER TABLE "merchant_onboarding_status" DROP CONSTRAINT "FK_9acad834246f0d034ed266b4f2c"`);
        await queryRunner.query(`ALTER TABLE "merchant_members" DROP CONSTRAINT "FK_5f007086ad43497dd53f5892872"`);
        await queryRunner.query(`ALTER TABLE "merchant_documents" DROP CONSTRAINT "FK_3f306d6e867fb947eaf2a9ae6ed"`);
        await queryRunner.query(`ALTER TABLE "merchant_documents" DROP CONSTRAINT "FK_d09dd0ffd48b414fefd02409416"`);
        await queryRunner.query(`ALTER TABLE "merchant_bank_accounts" DROP CONSTRAINT "FK_6547a5bab57714416db527ba19f"`);
        await queryRunner.query(`DROP TABLE "merchants"`);
        await queryRunner.query(`DROP TABLE "merchant_audit_log"`);
        await queryRunner.query(`DROP TABLE "merchant_notes"`);
        await queryRunner.query(`DROP TABLE "merchant_onboarding_status"`);
        await queryRunner.query(`DROP TABLE "merchant_members"`);
        await queryRunner.query(`DROP TABLE "merchant_documents"`);
        await queryRunner.query(`DROP TABLE "merchant_bank_accounts"`);
    }

}
